func myfunc{
    CtxSet("out", str(ThreadData()))
    SetThreadData(obj("result"))
}

run str {
  SetThreadData(obj("data"))
  WaitGroup(1)
  go {
    SetThreadData(obj("subfunc"))
    myfunc()
    CtxSet("ret", str(ThreadData()))
    WaitDone()
  }
  WaitAll()
  return str(ThreadData()) + Ctx("#out# #ret#")
}
===== datasubfunc result
run int {
  for i in 1..10 {
    go (ind: i) {
      int sum
      for i in 1..ind {
        sum += i
      }
      if ind == 5 : exit(sum*10)
    }
  }
  sleep(1000)
  return 0
}
===== 150
run str {
  int count = 6
  sval #= Repeat(`0`, count + 3)
  WaitGroup(count)
  for i in 1..count {
    go (ind: i) {
      Lock()
      str val = #sval
      val[ind-1] = '1'
      CtxSet(`sval`, val)
      Unlock()
      WaitDone()
    }
  }
  WaitAll()
  WaitGroup(3)
  for i in 1..3 {
    go (ind: i, count: count) {
      Lock()
      str val = #sval
      val[count+ind-1] = '7'
      CtxSet(`sval`, val)
      Unlock()
      WaitDone()
    }
  }
  WaitAll()
  return #sval
}
===== 111111777
run int {
  ival #= 0
  int count = 3
  WaitGroup(count)
  for i in 1..count {
    go {
      for i in 1..100 {
        Lock()
        CtxSet(`ival`, int(#ival)+1)
        Unlock()
      }
      WaitDone()
    }
  }
  WaitAll()
  return int(#ival)
}
===== 300
run str {
  arr astr = {`0`, `a`, `X`}
  thread th = go( mya: astr) {
      mya += `OK`
      mya[1] = `A`
      fromth #= Join(mya, `-`)
  }
  wait(th)
  return Join(astr, `+`) +`!=` + #fromth
}
===== 0+a+X!=0-A-X-OK
run int {
  int ai = 98
  int ab = 3
  thread th1 = go( inp: ai, ina: ab+7) { th1 #= ina + inp/2  + 1  }
  wait(th1)
  return int(#th1)
}
===== 60
run str {
  out #= 1
  thread th1 = go { 
    out #= #out + `2` 
    sleep(100)
    out #= #out + `5` 
  }
  sleep(50)
  suspend(th1)
  thread th2 = go { 
    out #= #out + `3` 
  }
  wait(th2)
  out #= #out + `4` 
  resume(th1)
  wait(th1)
  return #out
}
===== 12345
run str {
  a #= 7
  thread g = go : 
  thread th = go {
      sleep(100)
      a #= 1
  }
  terminate(th)
  terminate(g)
  return #a
}
===== 7