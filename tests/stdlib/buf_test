run arr.int {
  arr.int ai = {-1000456, -346, -16, 0, 7, 257, 1346734930, 568890303434}
  buf b
  for i in ai {
    EncodeInt(b, i)
  }
  if *b != *ai * 8 : error(77,`b size`)
  arr.int ret
  for i in 0..(*ai-1) {
    ret += DecodeInt(b, i*8)
  }
  return ret
}
===== [-1000456 -346 -16 0 7 257 1346734930 568890303434]
run bool {
  buf b
  if !b? : b += `data`
  return b?
}
===== true
run str {
  return str(UnBase64(Base64(buf(`абв010203 test ŋ`))))
}
===== абв010203 test ŋ
run str {
  return Base64(UnHex(`010203`) + buf(`test ŋ 7`))
}
===== AQIDdGVzdCDFiyA3
run str {
  buf b1 = buf(`xyz ŋ`)
  return str(b1 + buf(`a017`))
}
===== xyz ŋa017
run str {
  buf b1 = buf(`Original ŋ`)
  buf b2
  b2 &= b1
  b1 += buf(`12345`)
  Del(Del(b2, 2, 3), *b1, -2)
  Insert(b1, 3, b2)
  return str(b2)
}
===== OrnOrnal ŋ123al ŋ123
run str {
  buf ba = buf(`Hello ŋ`)
  str s = Hex(ba += '0')
  return s + str(UnHex(s)) + str(UnHex(Upper(s)))
}
===== 48656c6c6f20c58b30Hello ŋ0Hello ŋ0
run str {
  buf ba = buf(`Тесt Ġ`)
  buf bb
  return Format(`%v %v`, buf(`OK1`), ba)
}
===== [79 75 49] [208 162 208 181 209 129 116 32 196 160]