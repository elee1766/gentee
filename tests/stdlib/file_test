run str {
    str temp = TempDir(``, `gentee_test`)
    str fname = temp + `/tmp`
    str out = str(ExistFile(fname)) + str(ExistFile(temp))
    CreateFile(fname, true)
    WriteFile(fname, `TEST`)
    CreateFile(fname, false)
    out += str(ExistFile(fname))
    finfo fi = FileInfo(fname)
    obj o = obj(fi)
    out += ` ` + str(fi.Size) + ` `
    CreateFile(fname, true)
    fi = FileInfo(fname)
    RemoveDir(temp)
    return out + str(fi.Size) + item(o, "size").str() + item(o, "name").str()
}
===== falsetruetrue 4 04tmp
run str {
    str temp = TempDir(``, `gentee_test`)
    str fname = temp + `/tmp`
    WriteFile(fname, `TEST`)
    finfo fi = FileInfo(fname)
    str out = str(fi.IsDir)
    fi = FileInfo(temp)
    RemoveDir(temp)
    return out + str(fi.IsDir)
}
===== falsetrue
run arr.str {
    arr.str ret
    arr.str files = {`01aaa.txt`, `тест.pdf`, `not folder`}
    str ftemp = TempDir(``, `eonza`)
    for fname in files {
        WriteFile(JoinPath(ftemp, fname), ``)
    }
    CreateDir(JoinPath(ftemp, `subdir`))
    CreateDir(JoinPath(ftemp, `subdir`, `folder 2`))
    CreateDir(JoinPath(ftemp, `folder 1`))
    CreateDir(JoinPath(ftemp, `empty`))
    arr files1 = {`another.txt`, `new.pdf`}
    for fname in files1 {
        WriteFile(JoinPath(ftemp, `subdir`, fname), ``)
    }
    arr files2 = {`my application`, `pattern.pdf`}
    for fname in files2 {
        WriteFile(JoinPath(ftemp, `subdir`, `folder 2`, fname), ``)
    }
    arr files3 = {`q1.sh`, `q2.sh`}
    for fname in files3 {
        WriteFile(JoinPath(ftemp, `folder 1`, fname), ``)
    }
    for item in ReadDir(ftemp, RECURSIVE | ONLYFILES, ``) {
        ret += item.Name
    } 
    for item in ReadDir(ftemp, RECURSIVE, `*fold*`) {
        ret += item.Name
    } 
    for item in ReadDir(ftemp, RECURSIVE | ONLYFILES | REGEXP, `.*\.pdf`) {
        ret += item.Name
    } 
    RemoveDir(ftemp)
    return Sort(ret)
}
===== [01aaa.txt another.txt folder 1 folder 2 my application new.pdf new.pdf not folder not folder pattern.pdf pattern.pdf q1.sh q2.sh тест.pdf тест.pdf]
run arr.str {
    arr.str ret
    arr.str files = {`aaa.txt`, `01df.doc`, `тест.pdf`, `noext`}
    str ftemp = TempDir(``, `eonza`)
    for fname in files {
        WriteFile(JoinPath(ftemp, fname), ``)
    }
    CreateDir(JoinPath(ftemp, `tmpdir`))
    arr.finfo list = ReadDir(ftemp)
    for item in list {
        ret += item.Name
    }
    for item in ReadDir(ftemp, 0, ``) {
        if item.Dir != ftemp {
            break
        }
        ret += item.Name
    } 
    RemoveDir(ftemp)
    return Sort(ret)
}
===== [01df.doc 01df.doc aaa.txt aaa.txt noext noext tmpdir tmpdir тест.pdf тест.pdf]
run str {
    str src = "./examples/hello.g"
    str ftemp = JoinPath(TempDir(), `hello.g`)
    int mode = FileMode(src)
    CopyFile(src, ftemp)
    if mode != FileMode(ftemp) {
      return "fail"
    }
    ChMode(ftemp, 0777)
    str ret = Format("%o", FileMode(ftemp))
    Remove(ftemp)
    return ret
}
===== 777
run str {
    str ftemp = TempDir() + `/tmphash.txt`
    WriteFile( ftemp, `This is a test ººº 01234`)
    WriteFile( ftemp, Sha256File(ftemp))
    str ret = Md5File(ftemp)
    Remove(ftemp)
    return ret
}
===== 409d4951180b8121ada2d12e8adf5f23
run str {
    str ftemp = TempDir() + `/tmpx.txt`
    WriteFile( ftemp, `TEST абс 01234` + "\r\n")
    str ret = str(ReadFile(ftemp, -10, 5) + ReadFile(ftemp, 3, 6))
    Remove(ftemp)
    return ret
}
===== с 01T аб
run str {
    str data = `TEST`
    str temp = TempDir(``, `gentee_test`)
    str src = temp + `/src.txt`
    str dest = temp + `/dest.txt`
    WriteFile(src, `TEST`)
    int count = CopyFile(src, dest)
    AppendFile(dest, data)
    AppendFile(dest, buf(data))
    data = ReadFile(dest)
    RemoveDir(temp)
    return data
}
===== TESTTESTTEST
run str {
    str temp = TempDir(``, `gentee_test`)
    str fname = temp + `/тест file.bin`
    WriteFile(fname, `TEST`)
    finfo fi = FileInfo(fname)
    str out = str(fi.Size == 4)
    time tm = fi.Time
    sleep(1500)
    WriteFile(fname, `TESTА`)
    fi = FileInfo(fname)
    out += str(fi.Size == 6) + str(tm < fi.Time)
    SetFileTime(fname, tm)
    fi = FileInfo(fname)
    str s = str(fi.Mode)
    RemoveDir(temp)
    return out + str(tm == fi.Time)
}
===== truetruetruetrue
const : TEST = `test`
run bool {
    str temp = TempDir(``, `gentee_test`)
    if !HasPrefix(temp, TempDir()) : return false
    str curDir = GetCurDir()
    ChDir(temp)
    str subdir = `one/тест`
    str subfile = subdir + `/one.dat`
    CreateDir(subdir)
    buf b = {0, `data`, 0}
    buf b1
    WriteFile(subfile, b)
    Rename(subfile, subfile + `1`)
    WriteFile(`rw.txt`, TEST)
    if ReadFile(`rw.txt`) != TEST : return false
    if *ReadFile(subfile + `1`, b1) != *b : return false
    ChDir(curDir)
    RemoveDir(temp)
    return true
}
===== true
