func rec(int i) {
    if i < 110 {
        rec(i+1)
    }
}
run  {
    rec(0)
}
===== [3:9] [Playground] maximum depth of recursion has been reached [100]
run  {
    WriteFile(`../path`, `pref`)
}
===== [2:5] [Playground] access denied [../path]
run  {
    TempDir(``, `pref`)
}
===== [2:5] [Playground] access denied [/tmp/pref_]
run  {
    TempDir(`../temp`, `pref`)
}
===== [2:5] [Playground] access denied [../temp/pref_]
run  str {
    str path = TempDir(GetCurDir(), `tmp`)
    return Substr(BaseName(path), 0, 3)
}
===== tmp
run  {
    Sha256File(`/../../temp`)
}
===== [2:5] [Playground] access denied [/../../temp]
run  {
    SetFileTime(`./../temp`, Now())
}
===== [2:5] [Playground] access denied [./../temp]
run  str {
    WriteFile(`temp`, `OK`)
    Rename(`temp`, `out.txt`)
    str sha = Sha256File(`out.txt`)
    SetFileTime(`out.txt`, Now())
    return ReadFile(`out.txt`) + str(*sha)
}
===== OK64
run  {
    Rename(`temp`,`../test`)
}
===== [2:5] [Playground] access denied [../test]
run  {
    Rename(`../test`, `temp`)
}
===== [2:5] [Playground] access denied [../test]
run  {
    RemoveDir(`..`)
}
===== [2:5] [Playground] access denied [..]
run str {
    str dir = GetCurDir()
    RemoveDir(dir)
    return GetCurDir()
}
===== [4:12] getwd: no such file or directory
run  {
    Remove(`/home/rem.txt`)
}
===== [2:5] [Playground] access denied [/home/rem.txt]
run bool {
    for i in 1..510 {
        WriteFile(`rem.txt`, `OK`)
        Remove(`rem.txt`)
    }
    return true
}
===== true
run {
    buf b = ReadFile(`../тест`, 0, 100)
}
===== [2:13] [Playground] access denied [../тест]
run {
    buf b
    ReadFile(`../ok`, b)
}
===== [3:5] [Playground] access denied [../ok]
run {
    ReadFile(`/tmp/ok`)
}
===== [2:5] [Playground] access denied [/tmp/ok]
run {
    ReadDir(`/tmp`, RECURSIVE, ``)
}
===== [2:5] [Playground] access denied [/tmp]
run {
    ReadDir(`../temp`)
}
===== [2:5] [Playground] access denied [../temp]
run str {
    WriteFile(`md.txt`, `OK`)
    arr.finfo ret = ReadDir(GetCurDir())
    str out
    for item in ret {
       out += item.Name
    }
    ret = ReadDir(`.`, RECURSIVE, ``)
    for item in ret {
       out += item.Name
    }
    return out
}
===== md.txtmd.txt
run {
    Md5File("./../fi.txt")
}
===== [2:5] [Playground] access denied [./../fi.txt]
run str {
    WriteFile(`md.txt`, `OK`)
    return Md5File(`md.txt`)
}
===== e0aa021e21dddbd6d8cecec71e9cf564
run {
    int mode = FileMode("/home/fi.txt")
}
===== [2:16] [Playground] access denied [/home/fi.txt]
run {
    finfo fi = FileInfo("/home/fi.txt")
}
===== [2:16] [Playground] access denied [/home/fi.txt]
run {
    ExistFile("../esome.txt")
}
===== [2:5] [Playground] access denied [../esome.txt]
run {
    str data = Repeat("this is a test message", 20000)
    for i in 1..20 {
        CreateFile(`out.txt`, true)
        AppendFile(`out.txt`, data)
    }
    for i in 1..15 {
        CreateFile(`out.txt`, false)
        AppendFile(`out.txt`, data)
    }
}
===== [9:9] [Playground] file size limit reached [5 MB]
run {
    CreateFile("../some.txt", false)
}
===== [2:5] [Playground] access denied [../some.txt]
run {
    CreateDir("../some/thing")
}
===== [2:5] [Playground] access denied [../some/thing]
run str {
    str dir = GetCurDir()
    CreateDir("../\{BaseName(dir)}/some/thing")
    ChDir("some/thing")
    CreateFile(`test.txt`, true)
    finfo fi = FileInfo(`test.txt`)
    return BaseName(GetCurDir()) + str(ExistFile(`test.txt`))
}
===== thingtrue
run str {
    CreateDir("some/thing")
    ChDir("some/thing")
    return BaseName(GetCurDir())
}
===== thing
run {
    WriteFile("ok", "OK")
    CopyFile("ok", "/tmp/test.txt")
}
===== [3:5] [Playground] access denied [/tmp/test.txt]
run {
    CopyFile("../ok", "test.txt")
}
===== [2:5] [Playground] access denied [../ok]
run str {
    str fname = "in.txt" 
    str out = "out.txt" 
    WriteFile(fname, "Initial line")
    CopyFile(fname, out)
    return ReadFile(out)
}
===== Initial line
run {
    ChMode("../../test", 0754)
}
===== [2:5] [Playground] access denied [../../test]
run int {
    CreateFile("test", false)
    ChMode("test", 0754)
    return FileMode("test")
}
===== 492
run str {
    CreateDir("test")
    ChDir("test")
    return BaseName(GetCurDir())
}
===== test
run {
    ChDir("/tmp")
}
===== [2:5] [Playground] access denied [/tmp]
run {
    ChDir("../temp")
}
===== [2:5] [Playground] access denied [../temp]
run str {
    str fname = "out.txt" 
    WriteFile(fname, "Initial line")
    AppendFile(fname, "this is a test message")
    return ReadFile(fname)
}
===== Initial linethis is a test message
run {
    AppendFile("out.txt", "this is a test message")
    str data = Repeat("this is a test message", 10000)
    for i in 1..700 {
        AppendFile("out.txt", data)
    }
}
===== [5:9] [Playground] file size limit reached [5 MB]
run {
    AppendFile("../out.txt", "this is a test message")
}
===== [2:5] [Playground] access denied [../out.txt]
run bool {
    return Dir(Dir(AbsPath("test"))) == TempDir()
}
===== true
run str {
    return AbsPath("../test")
}
===== [2:12] [Playground] access denied [../test]
run {
    OpenWith("firefox", "index.html")
}
===== [2:5] [Playground] starting any processes is disabled
run {
    Open("index.html")
}
===== [2:5] [Playground] starting any processes is disabled
run {
    Start("./myapp")
}
===== [13:3] [Playground] starting any processes is disabled
run {
    Run("./myapp")
}
===== [6:3] [Playground] starting any processes is disabled
run {
    SetEnv("MYPATH", true)
}
===== [2:5] [Playground] setting the environment variable is disabled
run str {
    str s = $PATH
    $MYPATH = "test"
    return s
}
===== [3:13] [Playground] setting the environment variable is disabled
run str {
    str s = $ echo "ooops"
    return s
}
===== [2:13] [Playground] starting any processes is disabled
run {
    $ echo "ooops"
}
===== [2:5] [Playground] starting any processes is disabled
run {
    for i in 1..2000 {
    }
}
===== [2:5] [Playground] maximum cycle count has been reached [1000]